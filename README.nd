Как работает алгоритм:

Муравьи путешествуют из стартового города, посещая все города. Мы можем представить, что они возвращаются по тем же путям и возвращают 
феромон на обратном пути. Они откладывают больше феромона на более короткие расстояния, чем на длинные, и только на пути, который они прошли. 
Каждый муравей принимает решение о том, в какой город идти, исходя из уровня феромона на пути и расстояния до ближайшего города.

Более детально:

1. Мы берем N муравьев.
2. Мы формируем матрицу отложений феромонов, она имеет ту же форму, что и матрица смежности графа. И координаты отвечают тем же городам.
Если расстояния [1,3] = 14, расстояние от 1 до 3 равно 14, а если феромон [1,3] = 0,2, уровень феромона, осажденного на пути между 1 и 3, 
составляет 0,2. Матрица феромона инициализируется переменными одинакового значения.
3. Исследование нескольких путей:
Муравей принимает решение о том, в какой город пойти, согласно:

```
row = pheromone ** alpha * (1.0 / distance) ** beta
```

`alpha` и `beta` действуют как параметр на феромон и расстояние соответственно.

Мы рассчитываем row для всех доступных городов (игнорируя города, которые уже посетили).

Вероятность перехода в следующий город:

```
norm_row(i) = row(i) / row.sum()
```

Например, если муравей находится в городе 4, а количество доступных городов составляет 2,4,8. Мы рассчитали баллы для этих городов как:

```
{2: 0.3, 4: 0.5, 8: 0.7}
```

Вероятность попадания `0.3 / (0.3 + 0.5 + 0.7) = 0.2`  и тд.


Муравей продолжает бегать из города в город согласно вышеупомянутому правилу выбора, пока он не посетит все города.

Если мы выбрали для начала 10 муравьев, у нас будет 10 путей в конце этой группы муравьев.

Поскольку на начальном этапе уровни феромонов одинаковы, выбор делается на расстоянии + некоторая случайноя выборка. Жадный рандом, так сказать.
Но мы хотим следить за успешными маршрутами, поэтому муравьи оставляют феромон.

4. На обратном пути все муравьи или выбранное количество лучших муравьев вносят феромон на пути, по которым они путешествуют.
Они оставляют:

```
 1 / (distance between two cities)
```
 
 Например: муравей прошел путь: [ (0 -> 5) (distance: 4), (5 -> 2) (distance: 15)]

0,25 единиц феромона будет откладываться на `pheromone[0,5] += 0.25` и `pheromone[5,2] += 0.06667`

Это делается для того, чтобы муравьи уделяли больше внимания более коротким маршрутам между городами.

5. Последнее, что мы должны позволить угасать феромонам, чтобы старый феромон не смутил муравьев следующего поколения.
Мы просто умножаем матрицу феромонов на коэффициент распада. Поэтому феромон, который отложен недавно, подвергался разложению и должен быть небольшим.

6. Продолжайте выполнять шаги с 3-5 для N итераций.
